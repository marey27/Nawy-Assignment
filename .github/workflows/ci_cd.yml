name: Test, Build, and Push Docker Image

on:
  push:
    branches: [master]
jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Adjust version as needed
          cache: 'npm'      # Cache dependencies for faster runs

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm test      # Ensure you have a "test" script in package.json

  build_and_push:
    needs: lint_and_test  # Wait for tests to pass
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        env:
          REPOSITORY: nawy-assignment
          IMAGE_TAG: latest
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${REPOSITORY}:${IMAGE_TAG} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${REPOSITORY}:${IMAGE_TAG}

  deploy:
    needs: build_and_push  # Wait for Docker image to be built
    runs-on: self-hosted
    container:
      image: ubuntu:22.04
      options: --user root
       
    env:
      REPOSITORY: nay-assignment
      IMAGE_TAG: latest
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install unzip
        run:  |
          apt-get update -y 
          apt-get install -y unzip docker.io 

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Deploy to Local Docker
        run: |
          cat <<'EOF' > main.tf
          terraform {
            required_providers {
              docker = {
                source  = "kreuzwerker/docker"
                version = "3.0.2"
              }
            }
          }

          provider "docker" {}

          resource "docker_container" "app" {
            name  = "node-hello"
            image = "${{ secrets.DOCKERHUB_USERNAME }}/${REPOSITORY}:${IMAGE_TAG}"
            ports {
              internal = 3000
              external = 3000
            }
            restart = "unless-stopped"
          }
          EOF

          terraform init
          terraform apply -auto-approve
        shell: bash 
