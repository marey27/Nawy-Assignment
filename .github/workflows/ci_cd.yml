name: CI/CD Pipeline

on:
  push:
    branches: [master]

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm install
      - run: npm install --include=dev
      - run: npm test
      - run: npm run lint:ci 

  build_and_push:
    needs: lint_and_test
    runs-on: ubuntu-latest
    env:
      REPOSITORY: nawy-assignment
      IMAGE_TAG: latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build_and_push
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Stop and remove existing container
        run: |
          if docker ps -a --filter "name=node-app" | grep -q "node-app"; then
            docker stop node-app || true
            docker rm node-app || true
          fi

      - name: Deploy container
        working-directory: ./terraform  # Target Terraform files
        env:
          TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          TF_VAR_image_tag: "latest"
        run: |
          terraform init
          terraform apply -auto-approve
