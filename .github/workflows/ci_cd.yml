name: CI/CD Pipeline

on:
  push:
    branches: [master]

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm install
      - run: npm test

  build_and_push:
    needs: lint_and_test
    runs-on: ubuntu-latest
    env:
      REPOSITORY: nawy-assignment
      IMAGE_TAG: latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build_and_push
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          echo "${{ secrets.SUDO_PASS }}" | sudo -S apt-get update -y
          echo "${{ secrets.SUDO_PASS }}" | sudo -S apt-get remove -y containerd docker.io runc || true
          #echo "${{ secrets.SUDO_PASS }}" | sudo -S apt-get install -y docker.io
          echo "${{ secrets.SUDO_PASS }}" | sudo -S apt-get install -y \
             docker.io \
             containerd \
             runc

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Stop and remove existing container
        run: |
          if docker ps -a --filter "name=node-app" | grep -q "node-app"; then
            docker stop node-app || true
            docker rm node-app || true
          fi

      - name: Deploy container
        run: |
          cat <<EOF > main.tf
          terraform {
            required_providers {
              docker = {
                source = "kreuzwerker/docker"
                version = "3.0.2"
              }
            }
          }

          provider "docker" {}

          resource "docker_container" "app" {
            name  = "node-app"
            image = "${{ secrets.DOCKERHUB_USERNAME }}/nawy-assignment:latest"
            ports {
              internal = 3000
              external = 3000
            }
            restart = "unless-stopped"
          }
          EOF

          terraform init
          terraform apply -auto-approve
